#include <stdio.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <string.h>

#define MSG_KEY 1234  // Message queue key
#define MSG_SIZE 100  // Max message size

// Message structure
struct msgbuf {
    long mtype;
    char mtext[MSG_SIZE];
};

int main() {
    int msgid;
    struct msgbuf message;
    pid_t pid;

    msgid = msgget(MSG_KEY, 0666 | IPC_CREAT);
    if (msgid == -1) {
        perror("msgget failed");
        return 1;
    }

    pid = fork();

    if (pid > 0) {  // Producer (Parent)
        message.mtype = 1;
        strcpy(message.mtext, "Hello from Producer!");
        msgsnd(msgid, &message, sizeof(message.mtext), 0);
        printf("Producer: Message sent\n");
        wait(NULL);
        msgctl(msgid, IPC_RMID, NULL);  // Remove queue
    } else {  // Consumer (Child)
        msgrcv(msgid, &message, sizeof(message.mtext), 1, 0);
        printf("Consumer: Message received: %s\n", message.mtext);
    }

    return 0;
}
